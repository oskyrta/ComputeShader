#version 430
layout(local_size_x = 32, local_size_y = 32) in;
layout(rgba32f, binding = 0) uniform image2D img_output;

const float att = 512;
const vec2 screen_size = vec2(512, 512);
uniform vec2 pos;
uniform vec2 size;

void main() {
    dvec2 bottom_left = pos - size / 2.;
    dvec2 top_right = pos + size / 2.;

    ivec2 pixel_coords = ivec2(gl_GlobalInvocationID.xy);

    double x0 = bottom_left.x + (double(gl_GlobalInvocationID.x) / screen_size.x) * (top_right.x - bottom_left.x); 
    double y0 = bottom_left.y + (double(gl_GlobalInvocationID.y) / screen_size.y) * (top_right.y - bottom_left.y);

    int count = 0;
    double x = x0 * x0 - y0 * y0 + x0;
    double y = 2 * x0 * y0 + y0;
    double newx = 0;
    double newy = 0;

    while(count < att && x*x + y*y < 4){
        newx = x*x - y*y + x0;
        newy = 2 * x*y + y0;
        x = newx;
        y = newy; 
        ++count;
    }

    // vec4 color = vec4(0, 1, 0, 1) * (float(count) / att) + vec4(0, 0, 1, 1) * (1 - float(count) / att);
    vec4 color = vec4(count / att, count / att, count / att, 1);

    imageStore(img_output, pixel_coords, color);
}